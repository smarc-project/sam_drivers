<launch>
    <arg name="debug" default="0"/>
    <arg name="mode" default="default"/>
    <arg name="robot_name" default="sam"/>
    <arg name="gps_port" default="/dev/ttyACM1"/>
    <arg name="gps_baud" default="115200"/>
    <arg name="prefix" default="$(var robot_name)/"/>
    <arg name="with_gps" default="true"/>
    <arg name="uav_can_interface" default="can0"/>
    <arg name="robot_urdf" default="sam_auv.urdf"/>

<group>

        
        <node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher" respawn="true" output="screen" >
            <param name="robot_description" 
            value="$(command 'xacro $(find-pkg-share sam_description)/urdf/$(var robot_urdf).xacro') "/>
        </node>

        <node name="joint_state_publisher" pkg="joint_state_publisher" exec="joint_state_publisher">
            <param name="rate" value="300"/>
            <param name="source_list" value="['command_states']"/>
        </node> 

        <node name="sbg_ellipseA" pkg="sbg_driver" exec="sbg_device" output="screen" namespace="$(var robot_name)">
            <param from="$(find-pkg-share sbg_driver)/config/ellipse_A_sam.yaml"/>
        </node>

        <node name="sbg_2_ros" pkg="sbg_driver" exec="sbg_to_ros.py" output="screen" namespace="$(var robot_name)">
            <param name="sbg_imu_data" value="sbg/imu_data"/>
            <param name="sbg_ekf_quat" value="sbg/ekf_quat"/>
            <param name="sbg_mag" value="sbg/mag"/>
            <param name="sbg_utc_time" value="sbg/utc_time"/>
        </node> 
      
        <node pkg="stim300" exec="stim300_driver" name="stim300_driver" output="screen" namespace = "$(var robot_name)">
            <param name = "device_name" value="/dev/ttyUSB1" />
            <param name =  "stanard_deviation_of_gyro" value="0.0004" />
            <param name = "stanard_deviation_of_acc" value="0.004" />
            <param name = "sample_rate" value = "125" />
        </node>
        
        <node pkg="dvl_driver" exec="dvl_driver" name="dvl_driver"  output="screen" namespace="$(var robot_name)">
            <param name="robot_name" value="$(var robot_name)" />
            <param name="ip" value="192.168.2.95" />
            <param name="port" value="16171" />
            <param name="log_raw_data" value="false" />
        </node>

        <node name="startup_check" pkg="sam_drivers" exec="sam_startup_check" output="screen" namespace="$(var robot_name)"></node>

        <node name="sam_joint_state_converter" pkg="sam_drivers" exec="sam_joint_state_converter" output="screen" namespace="$(var robot_name)"> </node>
       
        <node name="navsat" pkg="nmea_navsat_driver" exec="nmea_serial_driver" output="screen" if="$(var with_gps)" namespace="$(var robot_name)">
            <param name="port" value="$(var gps_port)"/>
            <param name="baud" value="$(var gps_baud)"/>
            <param name="frame_id" value="gps_link"/>
            <remap from="fix" to="gps"/>
        </node> 
    </group>
    
    <include file="$(find sam_uavcan_bridge)/launch/bridge.launch">
        <arg name="uav_can_interface" value="$(var uav_can_interface)"/>
    </include>

    <!-- <include file="$(find-pkg-share message_joiner)/launch/joiner.launch.xml">
        <param name="uav_can_interface" value="$(var uav_can_interface)"/>
    </include> -->
   
</launch>

